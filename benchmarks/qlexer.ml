# 1 "qlexer.mll"
 
  open Qparser

# 6 "qlexer.ml"
let __ocaml_lex_tables = {
  Lexing.lex_base =
   "\000\000\234\255\235\255\046\000\000\000\001\000\006\000\001\000\
    \242\255\243\255\244\255\245\255\246\255\247\255\000\000\250\255\
    \251\255\252\255\253\255\009\000\255\255\001\000\011\000\000\000\
    \008\000\254\255\002\000\240\255\004\000\009\000\001\000\015\000\
    \004\000\010\000\012\000\007\000\010\000\015\000\019\000\013\000\
    \249\255\030\000\019\000\021\000\016\000\019\000\023\000\027\000\
    \248\255\020\000\241\255\032\000\022\000\239\255\027\000\023\000\
    \025\000\027\000\238\255\027\000\032\000\028\000\030\000\032\000\
    \237\255";
  Lexing.lex_backtrk =
   "\255\255\255\255\255\255\019\000\021\000\021\000\021\000\021\000\
    \255\255\255\255\255\255\255\255\255\255\255\255\021\000\255\255\
    \255\255\255\255\255\255\021\000\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255";
  Lexing.lex_default =
   "\001\000\000\000\000\000\255\255\255\255\255\255\255\255\255\255\
    \000\000\000\000\000\000\000\000\000\000\000\000\255\255\000\000\
    \000\000\000\000\000\000\255\255\000\000\255\255\255\255\255\255\
    \255\255\000\000\255\255\000\000\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \000\000\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \000\000\255\255\000\000\255\255\255\255\000\000\255\255\255\255\
    \255\255\255\255\000\000\255\255\255\255\255\255\255\255\255\255\
    \000\000";
  Lexing.lex_trans =
   "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\020\000\020\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \020\000\031\000\020\000\000\000\000\000\000\000\000\000\000\000\
    \016\000\015\000\000\000\012\000\010\000\000\000\000\000\000\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\011\000\000\000\000\000\013\000\000\000\000\000\
    \000\000\000\000\000\000\006\000\000\000\000\000\000\000\000\000\
    \009\000\005\000\000\000\000\000\000\000\000\000\000\000\004\000\
    \022\000\019\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\008\000\018\000\000\000\017\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \051\000\028\000\026\000\021\000\023\000\025\000\007\000\054\000\
    \049\000\030\000\033\000\041\000\024\000\059\000\027\000\014\000\
    \029\000\034\000\035\000\036\000\037\000\032\000\038\000\039\000\
    \040\000\042\000\043\000\044\000\045\000\046\000\047\000\048\000\
    \050\000\052\000\053\000\055\000\056\000\057\000\058\000\060\000\
    \061\000\062\000\063\000\064\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \002\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000";
  Lexing.lex_check =
   "\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\000\000\000\000\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \000\000\030\000\000\000\255\255\255\255\255\255\255\255\255\255\
    \000\000\000\000\255\255\000\000\000\000\255\255\255\255\255\255\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\255\255\255\255\000\000\255\255\255\255\
    \255\255\255\255\255\255\000\000\255\255\255\255\255\255\255\255\
    \000\000\000\000\255\255\255\255\255\255\255\255\255\255\000\000\
    \019\000\000\000\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\000\000\000\000\255\255\000\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \006\000\014\000\021\000\019\000\022\000\024\000\000\000\005\000\
    \007\000\029\000\031\000\032\000\023\000\004\000\026\000\000\000\
    \028\000\033\000\034\000\035\000\036\000\031\000\037\000\038\000\
    \039\000\041\000\042\000\043\000\044\000\045\000\046\000\047\000\
    \049\000\051\000\052\000\054\000\055\000\056\000\057\000\059\000\
    \060\000\061\000\062\000\063\000\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \000\000\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255";
  Lexing.lex_base_code =
   "";
  Lexing.lex_backtrk_code =
   "";
  Lexing.lex_default_code =
   "";
  Lexing.lex_trans_code =
   "";
  Lexing.lex_check_code =
   "";
  Lexing.lex_code =
   "";
}

let rec token lexbuf =
   __ocaml_lex_token_rec lexbuf 0
and __ocaml_lex_token_rec lexbuf __ocaml_lex_state =
  match Lexing.engine __ocaml_lex_tables __ocaml_lex_state lexbuf with
      | 0 ->
# 6 "qlexer.mll"
                        ( token lexbuf )
# 137 "qlexer.ml"

  | 1 ->
# 7 "qlexer.mll"
          ( QG )
# 142 "qlexer.ml"

  | 2 ->
# 8 "qlexer.mll"
      ( LB )
# 147 "qlexer.ml"

  | 3 ->
# 9 "qlexer.mll"
      ( RB )
# 152 "qlexer.ml"

  | 4 ->
# 10 "qlexer.mll"
      ( LP )
# 157 "qlexer.ml"

  | 5 ->
# 11 "qlexer.mll"
      ( RP )
# 162 "qlexer.ml"

  | 6 ->
# 12 "qlexer.mll"
                  ( WC )
# 167 "qlexer.ml"

  | 7 ->
# 13 "qlexer.mll"
                   ( WN )
# 172 "qlexer.ml"

  | 8 ->
# 14 "qlexer.mll"
      ( EQ )
# 177 "qlexer.ml"

  | 9 ->
# 15 "qlexer.mll"
      ( PLS )
# 182 "qlexer.ml"

  | 10 ->
# 16 "qlexer.mll"
      ( CLN )
# 187 "qlexer.ml"

  | 11 ->
# 17 "qlexer.mll"
      ( CMA )
# 192 "qlexer.ml"

  | 12 ->
# 18 "qlexer.mll"
      ( H )
# 197 "qlexer.ml"

  | 13 ->
# 19 "qlexer.mll"
      ( Z )
# 202 "qlexer.ml"

  | 14 ->
# 20 "qlexer.mll"
        ( X )
# 207 "qlexer.ml"

  | 15 ->
# 21 "qlexer.mll"
         ( QB )
# 212 "qlexer.ml"

  | 16 ->
# 22 "qlexer.mll"
         ( CB )
# 217 "qlexer.ml"

  | 17 ->
# 23 "qlexer.mll"
           ( IN )
# 222 "qlexer.ml"

  | 18 ->
# 24 "qlexer.mll"
            ( OUT )
# 227 "qlexer.ml"

  | 19 ->
let
# 25 "qlexer.mll"
                         str
# 233 "qlexer.ml"
= Lexing.sub_lexeme lexbuf lexbuf.Lexing.lex_start_pos lexbuf.Lexing.lex_curr_pos in
# 25 "qlexer.mll"
                             ( ID(int_of_string(str)) )
# 237 "qlexer.ml"

  | 20 ->
# 26 "qlexer.mll"
      ( EOF )
# 242 "qlexer.ml"

  | 21 ->
let
# 27 "qlexer.mll"
       chr
# 248 "qlexer.ml"
= Lexing.sub_lexeme_char lexbuf lexbuf.Lexing.lex_start_pos in
# 27 "qlexer.mll"
           ( failwith ("lex error: "^(Char.escaped chr)))
# 252 "qlexer.ml"

  | __ocaml_lex_state -> lexbuf.Lexing.refill_buff lexbuf;
      __ocaml_lex_token_rec lexbuf __ocaml_lex_state

;;

